CREATE USER ATHENA IDENTIFIED BY brutal;

grant connect, dba to ATHENA;

/* SEQUENCIAS */

CREATE SEQUENCE  SEQ_INVOICE  MINVALUE 1 MAXVALUE 9999999999 INCREMENT BY 1 START WITH 1;

CREATE SEQUENCE  SEQ_INVOICE_ITEM  MINVALUE 1 MAXVALUE 9999999999 INCREMENT BY 1 START WITH 1;

CREATE SEQUENCE  SEQ_PROD_X_PROD  MINVALUE 1 MAXVALUE 9999999999 INCREMENT BY 1 START WITH 1;

CREATE SEQUENCE  SEQ_PRODUCT  MINVALUE 1 MAXVALUE 9999999999 INCREMENT BY 1 START WITH 1;

CREATE SEQUENCE  SEQ_ADDRESS  MINVALUE 1 MAXVALUE 9999999999 INCREMENT BY 1 START WITH 1;

CREATE SEQUENCE  SEQ_CATEGORY  MINVALUE 1 MAXVALUE 9999999999 INCREMENT BY 1 START WITH 1;

CREATE SEQUENCE  SEQ_COMPANY  MINVALUE 1 MAXVALUE 9999999999 INCREMENT BY 1 START WITH 1;

CREATE SEQUENCE  SEQ_CUSTOMER  MINVALUE 1 MAXVALUE 9999999999 INCREMENT BY 1 START WITH 1;

CREATE SEQUENCE  SEQ_EMPLOYEE  MINVALUE 1 MAXVALUE 9999999999 INCREMENT BY 1 START WITH 1;

CREATE SEQUENCE  SEQ_JOB  MINVALUE 1 MAXVALUE 9999999999 INCREMENT BY 1 START WITH 1;

CREATE SEQUENCE  SEQ_PROFILE  MINVALUE 1 MAXVALUE 9999999999 INCREMENT BY 1 START WITH 1;

CREATE SEQUENCE  SEQ_SALES_ORDER  MINVALUE 1 MAXVALUE 9999999999 INCREMENT BY 1 START WITH 1;

CREATE SEQUENCE  SEQ_SALES_ORDER_ITEM  MINVALUE 1 MAXVALUE 9999999999 INCREMENT BY 1 START WITH 1;

CREATE SEQUENCE  SEQ_SHIPPER  MINVALUE 1 MAXVALUE 9999999999 INCREMENT BY 1 START WITH 1;

CREATE SEQUENCE  SEQ_SUPPLIER  MINVALUE 1 MAXVALUE 9999999999 INCREMENT BY 1 START WITH 1;

CREATE SEQUENCE  SEQ_USER  MINVALUE 1 MAXVALUE 9999999999 INCREMENT BY 1 START WITH 1;

/* TABELAS */

CREATE TABLE CATEGORY
(
  ID NUMBER NOT NULL,
  CONSTRAINT PK_CATEGORY PRIMARY KEY (ID),
  NAME VARCHAR2(30) NOT NULL
);

CREATE TABLE JOB
(
 ID NUMBER NOT NULL,
 CONSTRAINT FK_JOB PRIMARY KEY (ID),
 NAME VARCHAR2(50) NOT NULL
);

CREATE TABLE PROVINCE
(
  ACRONYM VARCHAR2(10) NOT NULL,
  CONSTRAINT PK_PROVINCE PRIMARY KEY (ACRONYM),
  NAME VARCHAR2(40) NOT NULL
);

CREATE TABLE ADDRESS
(
  ID NUMBER NOT NULL,
  CONSTRAINT PK_ADDRESS PRIMARY KEY (ID),
  ZIPCODE VARCHAR2(20),
  STREET VARCHAR2(60) NOT NULL,
  NEIGHBORHOOD VARCHAR2(50),
  CITY VARCHAR2(50),
  COMPLEMENT VARCHAR2(200),
  PROVINCE VARCHAR(10)
);

CREATE TABLE NATURE_OF_OPERATION
(
  CFOP VARCHAR2(20) NOT NULL,
  CONSTRAINT PK_NATURE_OF_OPERATION PRIMARY KEY (CFOP),
  APPLICATION VARCHAR2(60),
  LABEL VARCHAR2(60)
);

CREATE TABLE NCM
(
 CODE VARCHAR2(10)  NOT NULL,
 CONSTRAINT PK_NCM PRIMARY KEY (CODE),
 DESCRIPTION VARCHAR2(50),
 UNIT_MEASURE VARCHAR2(5)
);

CREATE TABLE ICMS
(
  ID NUMBER NOT NULL,
  CONSTRAINT PK_ICMS PRIMARY KEY (ID),
  DESCRIPTION VARCHAR2(40),
  PERCENTAGE NUMBER(8,2) NOT NULL
);

CREATE TABLE COMPANY
(
  ID NUMBER NOT NULL,
  CONSTRAINT PK_COMPANY PRIMARY KEY (ID),
  DATE_REGISTER DATE NOT NULL,
  COMPANY_NAME VARCHAR2(60) NOT NULL,
  TRADE_NAME VARCHAR2(60),
  SOCIAL_SECURITY VARCHAR2(20) NOT NULL,
  REGISTER_NUMBER VARCHAR2(20),
  CITY_REGISTER VARCHAR2(20),
  ADDRESS NUMBER NOT NULL,
  ADDRESS_NUMBER VARCHAR2(10),
  ZIPCODE VARCHAR2(20),
  PHONE VARCHAR2(20),
  FAX VARCHAR(20),
  WEB_SITE VARCHAR2(100),
  STATUS VARCHAR2(20) NOT NULL
);

CREATE TABLE EMPLOYEE
(
  ID NUMBER NOT NULL,
  CONSTRAINT PK_EMPLOYEE PRIMARY KEY (ID),
  HIRE_DATE DATE NOT NULL,
  RESIGNATION_DATE DATE,
  NAME VARCHAR2(80) NOT NULL,
  JOB NUMBER NOT NULL,
  SOCIAL_SECURITY VARCHAR2(20) NOT NULL,
  REGISTER_NUMBER VARCHAR2(20),
  ADDRESS NUMBER NOT NULL,
  ADDRESS_NUMBER VARCHAR2(10),
  HOME_PHONE VARCHAR2(20),
  CELL_PHONE VARCHAR2(20),
  EMAIL VARCHAR2(100),
  STATUS VARCHAR2(20) not null
);
  
CREATE TABLE ROLE
(
  KEY VARCHAR2(5) NOT NULL,
  CONSTRAINT PK_ROLE PRIMARY KEY (KEY),
  NAME VARCHAR2(30) NOT NULL,
  LABEL VARCHAR2(50)
);

CREATE TABLE PROFILE
(
  ID NUMBER NOT NULL,
  CONSTRAINT PK_PROFILE PRIMARY KEY (ID),
  NAME VARCHAR2(30) NOT NULL,
  LABEL VARCHAR2(50)
);  
  
CREATE TABLE USERS
(
 ID NUMBER NOT NULL,
 CONSTRAINT PK_USER PRIMARY KEY (ID),
 USERNAME VARCHAR2(30) NOT NULL,
 PASSWORD VARCHAR2(50) NOT NULL,
 EMPLOYEE NUMBER,
 PROFILE NUMBER NOT NULL,
 STATUS VARCHAR2(20) NOT NULL,
 BLOCKED INTEGER DEFAULT 0
);
 
CREATE TABLE USER_ROLE
(
  USERS NUMBER NOT NULL,
  ROLE VARCHAR2(5) NOT NULL
);

CREATE TABLE PROFILE_ROLE
(
  PROFILE NUMBER NOT NULL,
  ROLE VARCHAR2(5) NOT NULL
);

CREATE TABLE CUSTOMER
(
  ID NUMBER NOT NULL,
  CONSTRAINT PK_CUSTOMER PRIMARY KEY (ID),
  DATE_REGISTER DATE,
  NAME VARCHAR2(80) NOT NULL,
  SOCIAL_SECURITY VARCHAR2(20) NOT NULL,
  REGISTER_NUMBER VARCHAR2(20),
  CITY_REGISTER VARCHAR2(20),
  ADDRESS NUMBER NOT NULL,
  ADDRESS_NUMBER VARCHAR2(10),
  ZIPCODE VARCHAR2(10),
  HOME_PHONE VARCHAR2(20),
  CELL_PHONE VARCHAR2(20),
  EMAIL VARCHAR2(100)
);


CREATE TABLE SUPPLIER
(
  ID NUMBER NOT NULL,
  CONSTRAINT PK_SUPPLIER PRIMARY KEY (ID),
  DATE_REGISTER DATE,
  COMPANY_NAME VARCHAR2(60) NOT NULL,
  TRADE_NAME VARCHAR2(60),
  SOCIAL_SECURITY VARCHAR2(20) NOT NULL,
  REGISTER_NUMBER VARCHAR2(20),
  CITY_REGISTER VARCHAR2(20),
  ADDRESS NUMBER NOT NULL,
  ADDRESS_NUMBER VARCHAR2(10),
  ZIPCODE VARCHAR2(10),
  PHONE VARCHAR2(20),
  FAX VARCHAR2(20),
  WEB_SITE VARCHAR2(100),
  STATUS VARCHAR2(20) NOT NULL
);

CREATE TABLE SHIPPER
(
  ID NUMBER NOT NULL,
  CONSTRAINT PK_SHIPPER PRIMARY KEY (ID),
  DATE_REGISTER DATE,
  BUSINESS_NAME VARCHAR2(60) NOT NULL,
  COMERCIAL_NAME VARCHAR2(60),
  SOCIAL_SECURITY VARCHAR2(20) NOT NULL,
  REGISTER_NUMBER VARCHAR2(20),
  CITY_REGISTER VARCHAR2(20),
  ADDRESS NUMBER NOT NULL,
  ADDRESS_NUMBER VARCHAR2(10),
  ZIPCODE VARCHAR2(10),
  PHONE VARCHAR2(20),
  FAX VARCHAR2(20),
  EMAIL VARCHAR2(100),
  STATUS VARCHAR2(20) NOT NULL
);

CREATE TABLE PRODUCT 
(
  ID NUMBER,
  CONSTRAINT PK_PRODUCT PRIMARY KEY (ID),
  PRODUCT_TYPE VARCHAR2(20),
  NAME VARCHAR2(80 BYTE), 
  SHORT_NAME VARCHAR2(40 BYTE), 
  DATE_REGISTER DATE, 
  CATEGORY NUMBER, 
  ICMS NUMBER, 
  NCM VARCHAR2(10), 
  STOCK NUMBER(10,3), 
  STOCKDOWN NUMBER(10,3), 
  STOCKUP NUMBER(10,3), 
  UNIT_MEASURE VARCHAR2(5), 
  SELLPRICE NUMBER(10,2), 
  COSTPRICE NUMBER(10,2), 
  IPI NUMBER(5,2), 
  LAST_COSTPRICE NUMBER(10,2), 
  LAST_SELLPRICE NUMBER(10,2), 
  DATE_LAST_COSTPRICE DATE, 
  DATE_LAST_SELLPRICE DATE, 
  STATUS NUMBER, 
  MARKUP NUMBER, 
  WEIGHT NUMBER, 
  HEIGHT NUMBER(10,3), 
  WIDTH NUMBER(10,3), 
  PRODUCTION_TIME NUMBER, 
  LAST_PRODUCTION_TIME NUMBER, 
  AVERAGE_PRODUCTION_TIME NUMBER,   
  MANUFACTURE NUMBER DEFAULT 0
);

CREATE TABLE PRODUCT_X_PRODUCT 
(	
  ID NUMBER, 
  CONSTRAINT PK_PRODUCT_X_PRODUCT PRIMARY KEY (ID),
  PARENT NUMBER, 
  PRODUCT NUMBER, 
  QUANTITY NUMBER, 
  ITEM_TYPE VARCHAR2(20)
);

CREATE TABLE SALE_ORDER
(
  ID NUMBER NOT NULL,
  CONSTRAINT PK_SALE_ORDER PRIMARY KEY (ID),
  CUSTOMER NUMBER NOT NULL,
  DATE_REGISTER DATE,
  DATE_VALIDITY DATE,
  DATE_DELIVERY DATE,
  TOTAL_ORDER NUMBER(10,2),
  EMPLOYEE NUMBER NOT NULL,
  OBSERVATION VARCHAR2(600),
  DATE_GENERATE DATE,
  STATUS VARCHAR2(20) NOT NULL
);

  
CREATE TABLE SALE_ORDER_ITEM
(
 ID NUMBER NOT NULL,
 CONSTRAINT PK_SALES_ORDER_ITEM PRIMARY KEY (ID),
 SALE_ORDER NUMBER NOT NULL,
 PRODUCT NUMBER NOT NULL,
 QUANTITY NUMBER(10,3),
 SELL_PRICE NUMBER(10,2)
 );

CREATE TABLE INVOICE 
(
  ID NUMBER,
  CONSTRAINT PK_INVOICE PRIMARY KEY (ID),
  INVOICE_TYPE VARCHAR2(20 BYTE), 
  INVOICE_NUMBER VARCHAR2(20 BYTE), 
  DATE_REGISTER DATE, 
  MAKE_DATE DATE, 
  PRINT_DATE DATE, 
  SERIAL_NUMBER NUMBER, 
  CFOP VARCHAR2(10 BYTE), 
  NATURE_OF_OPERATION VARCHAR2(10 BYTE), 
  ISSUER NUMBER, 
  RECEIVER NUMBER, 
  BASE_ICMS NUMBER(10,2), 
  TOTAL_ICMS NUMBER(10,2), 
  BASE_ICMS_SUBSTITUICAO NUMBER(10,2), 
  TOTAL_ICMS_SUBSTITUICAO NUMBER(10,2), 
  TOTAL_PRODUCTS NUMBER(10,2), 
  TOTAL_FRETE NUMBER(10,2), 
  TOTAL_INVOICE NUMBER(10,2), 
  TOTAL_SEGURO NUMBER(10,2), 
  OUTRAS_DESPESAS NUMBER(10,2), 
  TOTAL_IPI NUMBER(10,2), 
  DESCONTO NUMBER(10,2), 
  SHIPPER NUMBER, 
  SHIPPER_BY NUMBER, 
  CAR_PLATE VARCHAR2(10 BYTE), 
  QUANTITY NUMBER(10,3), 
  ESPECIE VARCHAR2(20 BYTE), 
  WEIGHT_LIQUID NUMBER(10,3), 
  WEIGHT_BRUTE NUMBER(10,3), 
  VOLUME NUMBER, 
  INVOICE_STATUS VARCHAR2(20 BYTE)
); 

CREATE TABLE INVOICE_ITEM 
(	
  ID NUMBER,
  CONSTRAINT PK_INVOICE_ITEM PRIMARY KEY (ID),
	INVOICE NUMBER, 
	PRODUCT NUMBER, 
	QUANTITY NUMBER, 
	TOTAL_PRODUCT NUMBER(10,2), 
	IPI_VALUE NUMBER(10,2), 
	CANCELED NUMBER DEFAULT 0, 
	ITEM_TYPE VARCHAR2(20 BYTE)
); 

alter table EMPLOYEE Add ZIP_CODE VARCHAR2(20);
  
/* Criação de constraints */
ALTER TABLE USER_ROLE ADD CONSTRAINT FK_USER_ROLE_USER FOREIGN KEY (USERS) REFERENCES USERS(ID);

ALTER TABLE USER_ROLE ADD CONSTRAINT FK_USER_ROLE_ROLE FOREIGN KEY (ROLE) REFERENCES ROLE(KEY);

ALTER TABLE PROFILE_ROLE ADD CONSTRAINT FK_PROFILE_ROLE_PROFILE FOREIGN KEY (PROFILE) REFERENCES PROFILE(ID);

ALTER TABLE PROFILE_ROLE ADD CONSTRAINT FK_PROFILE_ROLE_ROLE FOREIGN KEY (ROLE) REFERENCES ROLE(KEY);

ALTER TABLE ADDRESS ADD CONSTRAINT FK_ADDRESS_PROVINCE FOREIGN KEY (PROVINCE) REFERENCES PROVINCE(ACRONYM); 

ALTER TABLE COMPANY ADD CONSTRAINT FK_COMPANY_ADDRESS FOREIGN KEY (ADDRESS) REFERENCES ADDRESS(ID);

ALTER TABLE EMPLOYEE ADD CONSTRAINT FK_EMPLOYEE_JOB FOREIGN KEY (JOB) REFERENCES JOB (ID);

ALTER TABLE EMPLOYEE ADD CONSTRAINT FK_EMPLOYEE_ADDRESS FOREIGN KEY (ADDRESS) REFERENCES ADDRESS (ID);

ALTER TABLE USERS ADD CONSTRAINT FK_USERS_PROFILE FOREIGN KEY (PROFILE) REFERENCES PROFILE (ID);

ALTER TABLE CUSTOMER ADD CONSTRAINT FK_CUSTOMER_ADDRESS FOREIGN KEY (ADDRESS) REFERENCES ADDRESS(ID);

ALTER TABLE SUPPLIER ADD CONSTRAINT FK_SUPPLIER_ADDRESS FOREIGN KEY (ADDRESS) REFERENCES ADDRESS(ID);

ALTER TABLE SHIPPER ADD CONSTRAINT FK_SHIPPER_ADDRESS FOREIGN KEY (ADDRESS) REFERENCES ADDRESS(ID);

ALTER TABLE PRODUCT ADD CONSTRAINT FK_PRODUCT_CATEGORY FOREIGN KEY (CATEGORY) REFERENCES CATEGORY(ID);

ALTER TABLE PRODUCT ADD CONSTRAINT FK_PRODUCT_ICMS FOREIGN KEY (ICMS) REFERENCES ICMS(ID);

ALTER TABLE PRODUCT ADD CONSTRAINT FK_PRODUCT_NCM FOREIGN KEY (NCM) REFERENCES NCM(CODE);

ALTER TABLE PRODUCT_X_PRODUCT ADD CONSTRAINT FK_PROD_X_PROD_CHILD FOREIGN KEY (PRODUCT)	 REFERENCES PRODUCT (ID);

ALTER TABLE PRODUCT_X_PRODUCT ADD CONSTRAINT FK_PROD_X_PROD_PARENT FOREIGN KEY (PARENT) REFERENCES PRODUCT (ID);

ALTER TABLE SALE_ORDER ADD CONSTRAINT FK_SALE_ORDER_CUSTOMER FOREIGN KEY (CUSTOMER) REFERENCES CUSTOMER(ID);

ALTER TABLE SALE_ORDER ADD CONSTRAINT FK_SALE_ORDER_EMPLOYEE FOREIGN KEY (EMPLOYEE) REFERENCES EMPLOYEE(ID);

ALTER TABLE SALE_ORDER_ITEM ADD CONSTRAINT FK_SALE_ORDER_ITEM_SALE FOREIGN KEY (SALE_ORDER) REFERENCES SALE_ORDER(ID);

ALTER TABLE SALE_ORDER_ITEM ADD CONSTRAINT FK_SALE_ORDER_ITEM_PRODUCT FOREIGN KEY (PRODUCT) REFERENCES PRODUCT(ID);

ALTER TABLE INVOICE ADD CONSTRAINT FK_INVOICE_SHIPPER FOREIGN KEY (SHIPPER) REFERENCES SHIPPER (ID);

ALTER TABLE INVOICE_ITEM ADD CONSTRAINT FK_INVOICE_ITEM_INVOICE FOREIGN KEY (INVOICE) REFERENCES INVOICE (ID) ENABLE;

ALTER TABLE INVOICE_ITEM ADD CONSTRAINT FK_PRODUCT_INVOICE_ITEM FOREIGN KEY (PRODUCT) REFERENCES PRODUCT (ID) ENABLE;

create index IDX_EMPLOYEE_SOCIAL_SECURITY on EMPLOYEE(SOCIAL_SECURITY);

create index IDX_CUSTOMER_SOCIAL_SECURITY on CUSTOMER(SOCIAL_SECURITY);

create index IDX_SUPPLIER_SOCIAL_SECURITY on SUPPLIER(SOCIAL_SECURITY);

create index IDX_SHIPPER_SOCIAL_SECURITY on SHIPPER(SOCIAL_SECURITY);

ALTER TABLE PRODUCT  MODIFY (STATUS VARCHAR2(20) );

ALTER TABLE NCM  MODIFY (DESCRIPTION VARCHAR2(100));

create table BARCODE
(
  ID number not null,
  CONSTRAINT PK_BARCODE primary key (ID),
  PRODUCT NUMBER not null,
  CONSTRAINT FK_BARCODE_PRODUCT foreign key (PRODUCT) REFERENCES PRODUCT(ID),
  BARCODE VARCHAR2(50) not null
);

 CREATE SEQUENCE  "ATHENA"."SEQ_BARCODE"  MINVALUE 1 MAXVALUE 9999999999 INCREMENT BY 1 START WITH 1  ;


